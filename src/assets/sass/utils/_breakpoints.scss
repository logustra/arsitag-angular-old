/*
{properti}{breakpoint} without available space
{properti}{breakpoint}_{properti}{breakpoint} with available space

properti
mn : min-width;
mx : max-width;

breakpoint
xs : xtra small     = less than 576px;
sm : small          = 576px;
md : medium         = 768px;
lg : large          = 992px ;
xl : xtra large     = 1200px;

example

@include mq(mnsm) {
    .example {
        your css
    }
}

that means your css is used at screen resolution 576px until large devices

@include mq(mnsm_mxlg) {
    .example {
        your css
    }
}

that means your css is used at screen resolution 576px until 991px
and have available space at screen resolution 992px until large devices

*/

// breakpoints
$small    :576px;
$medium   :768px;
$large    :992px;
$xlarge   :1200px;

// media queries
@mixin mq($screenSize) {
  @if $screenSize == xs {
   @media only screen and (max-width: $small) { @content; }
  }
  @else if $screenSize == sm {
   @media only screen and (min-width: $small) and (max-width: $medium - 1) { @content; }
  }
  @else if $screenSize == mnsm {
   @media only screen and (min-width: $small) { @content; }
  }
  @else if $screenSize == mnsm_mxlg {
   @media only screen and (min-width: $small) and (max-width: $large - 1) { @content; }
  }
  @else if $screenSize == mnsm_mxxl {
   @media only screen and (min-width: $small) and (max-width: $xlarge - 1) { @content; }
  }
  @else if $screenSize == md {
   @media only screen and (min-width: $medium) and (max-width: $large - 1) { @content; }
  }
  @else if $screenSize == mnmd {
   @media only screen and (min-width: $medium) { @content; }
  }
  @else if $screenSize == mnmd_mxxl {
   @media only screen and (min-width: $medium) and (max-width: $xlarge - 1) { @content; }
  }
  @else if $screenSize == lg {
   @media only screen and (min-width: $large) and (max-width: $xlarge - 1) { @content; }
  }
  @else if $screenSize == mnlg {
   @media only screen and (min-width: $large) { @content; }
  }
  @else if $screenSize == xl {
   @media only screen and (min-width: $xlarge) { @content; }
  }
}
